// <auto-generated />
using System;
using LooppieCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LooppieData.Migrations
{
    [DbContext(typeof(LooppieContext))]
    [Migration("20190313061320_Change-UserId-To-UserName")]
    partial class ChangeUserIdToUserName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LooppieCore.Domain.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Explanation");

                    b.Property<int>("HitCount");

                    b.Property<Guid?>("QuestionId");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("LooppieCore.Domain.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<int>("HotRank");

                    b.Property<DateTime>("QuestionCreateTime");

                    b.Property<string>("SubCategory");

                    b.Property<string>("Submitter");

                    b.HasKey("QuestionId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("LooppieCore.Domain.QuestionAnswerRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Anonymous");

                    b.Property<int>("Answer");

                    b.Property<DateTime>("AnswerRecordCreateTime");

                    b.Property<string>("Answerer");

                    b.Property<Guid>("QuestionId");

                    b.HasKey("ID");

                    b.ToTable("QuestionAnswerRecord");
                });

            modelBuilder.Entity("LooppieCore.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ActiveUser");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("UserCreateTime");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LooppieCore.Domain.Answer", b =>
                {
                    b.HasOne("LooppieCore.Domain.Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
